name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: read

# Cancel in-progress runs for same PR
concurrency:
  group: ci-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  quick-checks:
    name: Quick Checks
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      # TODO: Add your quick checks here
      - name: Check TypeScript
        run: npm run typecheck || echo "Configure typecheck script"

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: quick-checks
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies (if needed)
        run: |
          if [ ! -d "node_modules" ]; then
            npm ci
          fi

      # TODO: Configure your test command
      - name: Run tests
        run: npm test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: quick-checks
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies (if needed)
        run: |
          if [ ! -d "node_modules" ]; then
            npm ci
          fi

      # TODO: Configure your build command
      - name: Build project
        run: npm run build || echo "Configure build script"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/ # TODO: Update with your build output path
          retention-days: 7

  ci-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [test, build]
    if: always()

    steps:
      - name: Check results
        run: |
          echo "## CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          TEST="${{ needs.test.result }}"
          BUILD="${{ needs.build.result }}"

          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Tests | $([[ "$TEST" == "success" ]] && echo "✅" || echo "❌") $TEST |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | $([[ "$BUILD" == "success" ]] && echo "✅" || echo "❌") $BUILD |" >> $GITHUB_STEP_SUMMARY

          if [[ "$TEST" == "success" && "$BUILD" == "success" ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### ✅ All checks passed!" >> $GITHUB_STEP_SUMMARY
            exit 0
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### ❌ Some checks failed" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
