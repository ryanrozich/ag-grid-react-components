# AG Grid React Components

> Enterprise-ready date filtering components for AG Grid

## Overview

This project provides advanced date filtering components for AG Grid React applications. The components support relative date expressions (like "Today-7d"), quick filter presets, and automatic URL state persistence.

## Components

### RelativeDateFilter
A date filter that supports both absolute dates and relative expressions.

**Features:**
- Toggle between date picker and expression input
- Relative expressions: Today, Today-7d, StartOfMonth, etc.
- All standard filter operations (equals, before, after, in range)
- Real-time validation

**Usage:**
```typescript
{
  field: 'date',
  filter: RelativeDateFilter,
  floatingFilter: true
  // Floating filter is automatically provided via getModelAsString()
}
```

### QuickFilterDropdown
A dropdown component for applying predefined filters with one click.

**Features:**
- Works with any column type (not just dates)
- Combine multiple filters in one action
- Customizable options with icons and descriptions
- Keyboard navigation support

**Usage:**
```typescript
<QuickFilterDropdown
  api={gridApi}
  columnId="date"
  options={filterOptions}
  placeholder="Select filter"
/>
```

### ActiveFilters
Display active filters as removable pills with filter values.

**Features:**
- Shows column names and filter values
- Individual filter removal with Ã— button
- Clear all filters button
- Supports date, text, and set filters
- Customizable styling

**Usage:**
```typescript
<ActiveFilters
  api={gridApi}
  filterModel={filterModel}
  className="custom-class"
/>
```

### URL State Persistence
Comprehensive grid state persistence with URL synchronization and compression.

**Features:**
- **Full Grid State**: Persists filters, columns, sorting, and grouping
- **URL Compression**: Uses LZ-String for 50-90% smaller URLs
- **Browser History**: Full back/forward navigation support
- **Shareable Links**: Share complete grid configurations
- **Selective Persistence**: Choose which state to include
- **TypeScript Support**: Full type safety with GridState and GridStateOptions

**Basic Usage:**
```typescript
import { setupGridStatePersistence } from 'ag-grid-react-components';

// Full grid state with compression
const cleanup = setupGridStatePersistence(gridApi, {
  useCompression: true,
  maxUrlLength: 2000,
  onStateLoad: (state) => console.log('Loaded:', state),
  onStateSave: (state) => console.log('Saved:', state)
});
```

**Advanced Usage:**
```typescript
import { captureGridState, applyGridState } from 'ag-grid-react-components';

// Manual state capture
const state = captureGridState(gridApi, {
  includeFilters: true,
  includeColumns: true,
  includeSort: true,
  includeRowGrouping: false
});

// Save to localStorage
localStorage.setItem('gridState', JSON.stringify(state));

// Restore state
const savedState = JSON.parse(localStorage.getItem('gridState'));
applyGridState(gridApi, savedState);
```

**Compression Effectiveness:**
- Simple filters: ~72% reduction
- Complex grid state: ~88% reduction
- Repetitive data compresses best

**Migration from Legacy:**
```typescript
// Old (filters only)
setupFilterStatePersistence(params.api);

// New (full state)
setupGridStatePersistence(params.api, {
  useCompression: true,
  includeFilters: true,
  includeColumns: true,
  includeSort: true
});
```

## Date Expression Syntax

Pattern: `[Anchor][Operator][Value][Unit]`

**Anchors:**
- Today - Current date at midnight
- Now - Current date and time
- StartOfWeek - Monday
- EndOfWeek - Sunday
- StartOfMonth - First day of month
- EndOfMonth - Last day of month
- StartOfYear - January 1st
- EndOfYear - December 31st

**Units:**
- d - days (Today-7d)
- w - weeks (Today+2w)
- M - months (StartOfMonth-1M)
- y - years (StartOfYear+1y)
- h - hours (Now-3h)
- m - minutes (Now+30m)

## Installation

```bash
npm install ag-grid-react-components

# Peer dependencies
npm install ag-grid-community ag-grid-react ag-grid-enterprise date-fns
```

## Requirements

- React 18+
- AG Grid 33.3.0+
- AG Grid Enterprise (for filter components)
- date-fns 4+

## License

MIT License - Free for commercial and non-commercial use.

## Links

- GitHub: https://github.com/ryanrozich/ag-grid-react-components
- NPM: https://www.npmjs.com/package/ag-grid-react-components
- Demo: https://demo.rozich.net/ag-grid-react-components/

## Author

Created by Ryan Rozich. Not affiliated with AG Grid Ltd.