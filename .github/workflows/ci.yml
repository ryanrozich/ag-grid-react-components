name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: read

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Trunk
        run: npm install -g @trunkio/launcher

      - name: Run Trunk check
        run: trunk check --no-fix --ci --upstream=origin/main

      - name: Check TypeScript
        run: npm run typecheck

      - name: Check whitespace
        run: npm run check:whitespace
        continue-on-error: true # Non-blocking since auto-fix workflow will handle it

  test:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build

      - name: Check bundle size
        run: npm run bundle-size || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  # E2E tests temporarily disabled for performance
  # To run E2E tests locally before pushing, use: npm run pre-push
  # e2e:
  #   name: E2E Tests (Shard ${{ matrix.shard }}/${{ strategy.job-total }})
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 15
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       shard: [1, 2, 3]
  #
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: "20"
  #         cache: "npm"
  #
  #     - name: Install dependencies
  #       run: npm ci
  #
  #     - name: Install Playwright browsers
  #       run: npx playwright install --with-deps chromium
  #
  #     - name: Run E2E tests (Shard ${{ matrix.shard }})
  #       run: npm run test:e2e -- --shard=${{ matrix.shard }}/${{ strategy.job-total }}
  #
  #     - name: Upload Playwright report
  #       uses: actions/upload-artifact@v4
  #       if: always()
  #       with:
  #         name: playwright-report-shard-${{ matrix.shard }}
  #         path: playwright-report/
  #         retention-days: 7

  publish-preview:
    name: Publish Preview
    runs-on: ubuntu-latest
    needs: [quality, test, build]
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build

      - name: Version preview package
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          npm version prerelease --preid=pr${PR_NUMBER}.$(date +%s) --no-git-tag-version

      - name: Publish preview to npm
        run: npm publish --tag preview --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
